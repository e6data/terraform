apiVersion: karpenter.k8s.aws/v1beta1
kind: EC2NodeClass
metadata:
  name: ${nodeclass_name}
spec:
  amiFamily: AL2
  role: "${karpenter_node_role_name}"
  subnetSelectorTerms:
    - tags:
        karpenter.sh/discovery: e6data-${cluster_name}
  securityGroupSelectorTerms:
    - tags:
        aws:eks:cluster-name: e6data-${cluster_name}
  tags: ${tags}
  blockDeviceMappings:
    - deviceName: /dev/xvda
      ebs:
        volumeSize: ${volume_size}Gi
        volumeType: gp3
  userData: |
    yum install nvme-cli -y
    # Check if NVMe drives are present
    if nvme list | grep -q "Amazon EC2 NVMe Instance Storage"; then
        # NVMe drives are detected, proceed with NVMe-specific commands
        nvme_drives=$$(nvme list | grep "Amazon EC2 NVMe Instance Storage" | cut -d " " -f 1 || true)
        readarray -t nvme_drives <<< "$$nvme_drives"
        num_drives=$${#nvme_drives[@]}
        
        if [ $$num_drives -gt 1 ]; then
            # Multiple NVMe drives detected, create RAID array
            yum install mdadm -y
            mdadm --create /dev/md0 --level=0 --name=md0 --raid-devices=$$num_drives "$${nvme_drives[@]}"
            mkfs.ext4 /dev/md0
            uuid=$$(blkid -o value -s UUID /dev/md0)
            mount_location="/mnt/fast-disks/$$uuid"
            mkdir -p $$mount_location
            mount /dev/md0 $$mount_location
            mdadm --detail --scan >> /etc/mdadm.conf 
            echo /dev/md0 $$mount_location ext4 defaults,noatime 0 2 >> /etc/fstab
        else
            # Single NVMe drive detected, format and mount it
            for disk in "$${nvme_drives[@]}"
            do
                mkfs.ext4 -F $$disk
                uuid=$$(blkid -o value -s UUID $$disk)
                mount_location="/mnt/fast-disks/$${uuid}"
                mkdir -p $$mount_location
                mount $$disk $$mount_location
                echo $$disk $$mount_location ext4 defaults,noatime 0 2 >> /etc/fstab 
            done
        fi
    else
        # NVMe drives are not detected, exit gracefully or skip NVMe-specific commands
        echo "No NVMe drives detected. Skipping NVMe-specific commands."
    fi